#!/usr/bin/env node

const requests = require('request-promise');
const config = require('./config');
const mock = require('./mocks/mocks')
const util = require('./util');

// config.routes.map(route => {
//     route.operations.map(method => {
//         console.log(config.url.concat(route.url));
//         let startMoment = Date.now();

//         let url = config.url.concat(route.url);
//         let body =  mock[route.url.concat('-', method)];
//         console.log(body);
//         requests[method](util.createOptions(url, body))
//             .then( response => {
//                 console.log(response.statusCode);
//                 let endMoment = Date.now();
//                 util.log(startMoment, endMoment);
//             });
//     });
// });

// let url = config.url.concat(config.routes[0].url);
// for(let i = 0; i < 5; i++) {
//     let body =  mock['/team-post'];
//     let startMoment = Date.now();
//     requests.post(util.createOptions('http://localhost:3000/team', body))
//     .then(res => {
//         let endMoment = Date.now();
//         util.log(startMoment, endMoment, 'team-post-local');
//         console.log(res.team._id);
//     });
// }

// for(let i = 0; i < 100; i++) {
// let bodyLogin = mock['/team-post'].admin;
//       body = mock['/team-post'];
//     requests.post(util.createOptions('http://localhost:3000/team', body))
//     .then(res => {
//         bodyLogin.teamId = res.team._id;
//         let startMoment = Date.now();
//         requests.post(util.createOptions('http://localhost:3000/login', bodyLogin))
//         .then(res => {
//             let endMoment = Date.now();
//             util.log(startMoment, endMoment, 'login-local');
//             console.log(startMoment);
//         });
//     });
// }

// for(let i = 0; i < 50; i++) {
//     let url = config.url.concat(config.routes[1].url);
//     let body =  mock['/signup'];
//     let startMoment = Date.now();
//     requests.post(util.createOptions('http://localhost:3000/signup', body))
//     .then(res => {
//         let endMoment = Date.now();
//         util.log(startMoment, endMoment, 'signup-local');
//     });
// }

for (let i = 0; i < 100; i++) {
    let url = config.url.concat(config.routes[1].url);
    let body = mock['/pending-members'];

    let bodySig = mock['/signup'];
    requests.post(util.createOptions('http://localhost:3000/signup', bodySig))
        .then(res => {
            body.userId = res.user._id
            let startMoment = Date.now();
            requests.patch(util.createOptions('http://localhost:3000/team/pending-members', body))
                .then(res => {
                    let endMoment = Date.now();
                    util.log(startMoment, endMoment, 'pending-members-local');
                });
        });
}

// let startMoment = Date.now();
// for (let i = 0; i < 100; i++) {
//     startMoment = Date.now();
//     requests.get(util.createOptions('http://localhost:3000/team/5a1eb816a62ec05a75e86fa9/members'))
//         .then(res => {
//             let endMoment = Date.now();
//             util.log(startMoment, endMoment, 'members-local');
//         });
// }